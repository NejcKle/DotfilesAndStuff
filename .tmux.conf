# Enable mouse control (clickable windows, panes, resizable panes)
set -g mouse on

# Fix problem with vim colors inside tmux
set -g default-terminal "screen-256color"

# Default sheel should be zsh
set-option -g default-shell /bin/zsh

# Prefix key is now alt + s
set-option -g prefix M-s

# Turn on vim like movement keys
set-window-option -g mode-keys vi

# Quickly open config file and reload it while inside tmux
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
# You can now seamlessly move between vim splits and tmux panes with
# ctrl + h/j/k/l keys
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l


# Change how pane splits are handeled
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# Use xclip program (you have to install it with apt) so you can copy paste 
# from tmux buffer to system clipboard
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# makes tmux send out the proper escape codes for setting the terminal title
# This is needed to avoid having weird title after running tmuxx alias command
set-option -g set-titles on
# sets the content of the title: user@host: /current/working/directory
set-option -g set-titles-string "#(echo $USER)@#H: #{pane_current_path}"

# default statusbar colors
set-option -g status-bg colour0
set-option -g status-fg colour205
set-option -g status-attr default

# default window title colors
set-window-option -g window-status-fg colour123
set-window-option -g window-status-bg default
set-window-option -g window-status-attr bright

# active window title colors
set-window-option -g window-status-current-fg colour84
set-window-option -g window-status-current-bg default
#set-window-option -g window-status-current-attr bright

# pane border
set-option -g pane-border-fg colour123
set-option -g pane-active-border-fg colour2

# message text
set-option -g message-bg colour81
set-option -g message-fg colour17 

# pane number display
set-option -g display-panes-active-colour colour203 
set-option -g display-panes-colour colour84 

# clock
set-window-option -g clock-mode-colour colour205
